package frc.robot.subsystems;

import com.revrobotics.CANSparkMax;  
import com.revrobotics.CANSparkLowLevel.MotorType;  
import edu.wpi.first.wpilibj2.command.SubsystemBase; 

public class DrivetrainSubsystem extends SubsystemBase {

  // Declaração dos motores escovados (NEO)
  private CANSparkMax MDE = new CANSparkMax(2, MotorType.kBrushless); // Motor dianteiro esquerdo
  private CANSparkMax MTD = new CANSparkMax(4, MotorType.kBrushless); // Motor traseiro direito
  private CANSparkMax MDD = new CANSparkMax(5, MotorType.kBrushless); // Motor dianteiro direito
  private CANSparkMax MTE = new CANSparkMax(3, MotorType.kBrushless); // Motor traseiro esquerdo

  public DrivetrainSubsystem() {
    MTD.follow(MDD); // Define MTD como seguidor do MDD
    MTE.follow(MDE); // Define MTE como seguidor do MDE

    // Inverte os motores se necessário
    MTE.setInverted(true);
    MDE.setInverted(true);
  }

  public void drive(double speed, double rotation, double multiplier, boolean brake) {
    if (!brake) {
      // Se o brake não estiver pressionado calcula e define a velocidade e rotação conforme a multiplicação
      MTE.set(((speed - (rotation / 2.6)) * -multiplier)); 
      MDD.set(((-speed + (-rotation / 2.6)) * -multiplier));  
      MDE.set(((speed - (rotation / 2.6)) * -multiplier));  
      MTD.set(((-speed + (-rotation / 2.6)) * -multiplier));
      // Caso contrário o motor irá ficar em posição estática
    } else {
      MTE.set(0); 
      MDD.set(0);  
      MDE.set(0);  
      MTD.set(0);  
    }
  }
}
